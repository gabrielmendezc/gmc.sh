name: Deploy
on:
  push:
    branches:
      - main
jobs:
  publish-core-api:
    name: Publish core API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          
      - name: Publish core API docker image to Github Package Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: gmencz/gmc.sh/api.gmc.sh
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: Dockerfile.api
          tags: latest
  publish-next-app:
    name: Publish Next app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'
          
      - name: Publish Next app docker image to Github Package Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: gmencz/gmc.sh/app.gmc.sh
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: Dockerfile.web
          tags: latest

      - name: Publish Next app reverse proxy docker image to Github Package Registry
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: gmencz/gmc.sh/app.gmc.sh-reverse-proxy
          username: ${{ secrets.GH_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          dockerfile: Dockerfile.nginx
          tags: latest

  deploy:
    name: Deploy Core API and Next app
    runs-on: ubuntu-latest
    needs: [publish-core-api, publish-next-app]
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        env:
          GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APP_FULL_PATH: ${{ secrets.APP_FULL_PATH }}
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          envs: GITHUB_USERNAME, GITHUB_TOKEN, APP_FULL_PATH, SERVER_PASSWORD
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            echo "$GITHUB_TOKEN" | sudo docker login docker.pkg.github.com -u $GITHUB_USERNAME --password-stdin
            cd $APP_FULL_PATH
            sudo docker-compose -f docker-compose.prod.yml pull core-api next-app next-app-reverse-proxy
            sudo docker-compose -f docker-compose.prod.yml up -d --force-recreate --build core-api next-app next-app-reverse-proxy